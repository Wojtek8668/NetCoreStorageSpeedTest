Self-contained .NET Core publish (the output will contain all .NET Core files required by the app and won't need .NET Core installation as a system-wide dependency)

Instructions
The instructions assume you are using .NET Core 2.0 or .NET Core daily builds. You can validate your .NET Core SDK version by typing dotnet --version.
    1.  Select a project to test with. If you don't have one, you can do one of the following:
    ◦   Create one with dotnet new console -o testapp; cd testapp, or
    ◦   Clone / download the [.NET Core self-contained application Docker Production Sample -- using .NET IL Linker].
    2.  Add a NuGet.Config file in the root of your project, using the following:
    •   dotnet new nuget
    •   Add this line to nuget.config, under <clear />: <add key="dotnet-core" value="https://dotnet.myget.org/F/dotnet-core/api/v3/index.json" />
    •   The final file should look like nuget.config.
    1.  Add a reference to the latest version of the linker package in your .csproj, using the following:
    ◦   dotnet add package ILLink.Tasks -v 0.1.4-preview-906439
    2.  Publish the application, using the following:
    ◦   dotnet publish -c release -r <RID> -o out
    ◦   where <RID> is one of win-x64, win-x86, linux-x64, osx-x64 depending the OS that you want to publish for.
    ◦   Example: dotnet publish -c release -r win-x64 -o out
    3.  Run the application, with the following and depending the name of the application:
    ◦   Windows: out\testapp
    ◦   Linux/macOS: ./out/testapp

https://github.com/dotnet/core/blob/master/samples/linker-instructions.mddot


dotnet publish C:\Dropbox\Projects\WinMacDiskSpeedTest\WinMacDiskSpeedTest.sln -c release -r win-x64 -o out_w64